services:
  artifactory:
    image: {{ docker_registry }}/jfrog/artifactory-oss:{{ artifactory_version }}
    container_name: artifactory
    environment:
      - JF_SHARED_DATABASE_TYPE={{ db_type }}
    ports:
      - "{{ external_port }}:8082"
    volumes:
      {% if use_named_volumes %}
      - {{ data_volume_name }}:/var/opt/jfrog/artifactory/data
      - {{ logs_volume_name }}:/var/opt/jfrog/artifactory/logs
      - {{ backup_volume_name }}:/var/opt/jfrog/artifactory/backup
      - {{ etc_volume_name }}:/var/opt/jfrog/artifactory/etc
      {% else %}
      - {{ data_dir }}/data:/var/opt/jfrog/artifactory/data
      - {{ data_dir }}/logs:/var/opt/jfrog/artifactory/logs
      - {{ data_dir }}/backup:/var/opt/jfrog/artifactory/backup
      - {{ data_dir }}/etc:/var/opt/jfrog/artifactory/etc
      {% endif %}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/artifactory/api/system/ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 40s
    ulimits:
      nproc: 65535
      nofile:
        soft: 32000
        hard: 40000
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "10"
    security_opt:
      - no-new-privileges:true
{% if use_postgres %}
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15
    container_name: artifactory-postgres
    environment:
      - POSTGRES_USER={{ postgres_user }}
      - POSTGRES_PASSWORD={{ postgres_password }}
      - POSTGRES_DB={{ postgres_db }}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U {{ postgres_user }}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "10"
    security_opt:
      - no-new-privileges:true
{% endif %}

networks:
  default:
    name: artifactory_network
    driver: bridge

{% if use_postgres %}
volumes:
  postgres_data:
    name: artifactory_postgres_data
{% endif %}
